
" Plugins...
call plug#begin('~/.config/nvim/plugged')
Plug 'kristijanhusak/vim-hybrid-material'
Plug 'mhinz/vim-signify'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'farmergreg/vim-lastplace'
Plug 'tpope/vim-surround'
Plug 'kien/ctrlp.vim'
Plug 'stfl/meson.vim'
" snippets
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" Programming languages plugins
Plug 'rust-lang/rust.vim'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'keith/swift.vim'
" latex
Plug 'lervag/vimtex'
Plug 'aliou/bats.vim'
" Python folding
Plug 'tmhedberg/SimpylFold'

"color schemes
Plug 'tyrannicaltoucan/vim-quantum'
Plug 'kristijanhusak/vim-hybrid-material'
Plug 'trevordmiller/nova-vim'
Plug 'jnurmine/Zenburn'
Plug 'tomasr/molokai'
Plug 'NLKNguyen/papercolor-theme'
call plug#end()

"I do not use vi. I can turn off this config
set nocompatible

syntax enable
set relativenumber
set hlsearch
set smartindent
set nowrap
set tabstop=8
set shiftwidth=8
set noexpandtab
set clipboard+=unnamed
set nocscopeverbose
set backspace=2
"indent"
filetype indent on
filetype plugin on
set omnifunc=syntaxcomplete#Complete
"allow vim to search in directories
set path+=**
"display all matching file when we tab complete
set wildmenu
set spell
"keep 10 lines above/below the cursor when moving
set scrolloff=10

if version >= 703
	" Keep undo history between sessions
	set undodir=~/.vim/undodir
endif

" disable Ex mode
noremap Q <NOP>

"color scheme
try
	" try the favorite color scheme
	colorscheme quantum
catch
	" if it is not possible to use the favorite color scheme
	" uses the default one
	colorscheme default
endtry

let mapleader=" "
let maplocalleader="\\"

if &term != "xterm" && exists('+colorcolumn')
	let &colorcolumn="80,".join(range(120,999),",")
endif

set wildignore+=*/tmp/*,*.so,*.swp,*.zip

"highlighting line number"
set cursorline

"Move the current line down
map - dd _p
"Edit vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
""Load vimrc
nnoremap <leader>sv :source $MYVIMRC<cr>
"Surrond the current word with double quotes
nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
"Close current tab
nnoremap tc :tabclose<cr>
"New tab
nnoremap tn :tabnew<cr>
"Go to next tab
nnoremap tj  :tabnext<CR>
"Go to previous tab
nnoremap tk  :tabprev<CR>
""Go to normal mode from insert mode
inoremap jk <esc>
"Go to left window
nnoremap <leader>h  :wincmd h<CR>
"Go to right window
nnoremap <leader>l  :wincmd l<CR>
"Go to top window
nnoremap <leader>j  :wincmd j<CR>
"Go to bottom window
nnoremap <leader>k  :wincmd k<CR>
"Disable esc key
inoremap <esc> <nop>
""Disable arrows keys! Use vim correctly
noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>
" Horizontal navigation shortcut
"Move 20 characters to the right
noremap <C-l> 20zl 
"Move 20 characters to the left
noremap <C-h> 20zh 

let g:netrw_winsize = 10
nnoremap <leader>f  :Vex<CR>

"folding
set foldmethod=syntax
set foldlevelstart=1
set foldnestmax=4

augroup filetype_html
	autocmd!
	autocmd FileType html nnoremap <buffer> <localleader>f Vatzf
augroup END

au BufRead COMMIT_EDITMSG call setpos('.', [0, 1, 1, 0])

" Remove all trailing whitespace when saving
" See http://vim.wikia.com/wiki/Remove_unwanted_spaces
autocmd FileType c,cpp,javascript,python,sql,text,yaml,markdown,rust autocmd BufWritePre * :%s/\s\+$//e

" toggle invisible characters
set invlist
set listchars=tab:▸\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
highlight SpecialKey ctermbg=none
set showbreak=↪
nmap <leader>ll :set list!<cr>

" load file changed outside vim
set autoread
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * :checktime

if has('termguicolors')
	set termguicolors
endif

" plugins
let g:enable_bold_font=1

"signify
let g:signify_vcs_list = [ 'git', 'hg', 'svn' ]

"ctrlp plugin config
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = { 'file':  '\v\.(pdf|txt)$', }

"vim-multiples-cursors
let g:multi_cursor_prev_key='<C-b>'
let g:multi_cursor_next_key='<C-m>'

"Toggle NERDTree plugin
nmap <leader>n :NERDTreeToggle<CR>
" Start NERDTree and put the cursor back in the other window.
autocmd VimEnter * NERDTree | wincmd p
"Open NERDTree on all new tab
autocmd BufWinEnter * if getcmdwintype() == '' | silent NERDTreeMirror | endif
" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
"NERDTree ignore file types
let NERDTreeIgnore = ['\.pyc$']
let NERDTreeShowBookmarks=1

"airline plugin
let g:airline_powerline_fonts=1
let g:airline_theme='quantum'

"vim-go
"disable warning in older Vim version
let g:go_version_warning = 0
"do not organize import on saving
let g:go_imports_autosave = 0

"vimade
let g:vimade = {
  \ "normalid": '',
  \ "basefg": '',
  \ "basebg": '',
  \ "fadelevel": 0.4,
  \ "colbufsize": 30,
  \ "rowbufsize": 30,
  \ "checkinterval": 32 }

" snippets
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsEditSplit="vertical"

"tex plugin
let g:tex_flavor = 'latex'  
